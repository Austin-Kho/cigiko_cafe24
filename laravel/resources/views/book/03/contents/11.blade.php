  <h2 class="page-header">{{$sub[$id][1]}}</h2>
  <div class="chapter">
    <section>
      <article>
        <p>파이썬을 이용하는 목적 중 하나는 웹페이지의 다양한 데이터를 수집하는 크롤링이 있다. 약 100여행 정도의 코드로 사이트의 특정 게시글들을 모아서 데이터를 만들고, 그렇게 싸인 데이터를 적절하게 분석해서 유의미한 정보를 만들거나 주기적으로 수집해서 어딘가에 보고하는 기반으로 사용할 수 있다.</p>
        <p>이 장에서는 스크래피(scrapy)를 이용해서 간단한 크롤링 애플리케이션을 만들어 보자.</p>
      </article>
    </section>
  </div>

  <h3 class="sub-header">9.1. 스크래피</h3>
  <div class="chapter">
    <section>
      <article>
        <p>파이썬으로 만들어진 대표적인 크롤러는 스크래피이다. 크롤링 프레임워크라고도 할 수 있다. 2008년 처음 0.7버전으로 공개된 이후 현재까지 지속적으로 업그레이드 된 버전을 배포하고 있다. 버전 히스토리는 https://doc.scrapy.org/en/latest/news.html#scrapy-1-5-1-2018-07-12에서 확인할 수 있다.</p>
        <p>스크래피의 장점은 다음과 같이 요약된다.</p>
        <ul>
          <li>스크랩할 항목 유형을 정의하는 클래스를 만들 수 있다.</li>
          <li>수집한 데이터를 원하는 대로 편집하는 기능을 제공한다.</li>
          <li>서버에 연동하기 위해 기능을 확장할 수 있다.</li>
          <li>크롤링 결과를 JSON, XML, CSV 등의 형식으로 내보낼 수 있다.</li>
          <li>손상된 HTML 파일을 분석할 수 있다.</li>
        </ul>
        <p>예제를 살펴 보기 전, 먼저 스크래피를 이용해서 크롤러를 만드는 대략적인 과정을 정리해 보자.</p>
        <ol>
          <li>크롤링할 아이템(item)을 설정한다.</li>
          <li>실제 크롤링할 스파이더(spider, 스크래피의 크롤러)를 만든다.</li>
          <li>크롤링할 사이트(시작점)와 크롤링 규칙을 설정한다.</li>
          <li>스파이더의 종류에 따른 몇 가지 설정을 추가한다. 예를 들어 크롤링할 URL의 패턴 등을 설정한다.</li>
          <li>HTML 문서를 파싱한 후 크롤러가 실행할 작업을 정의한다.</li>
          <li>크롤러를 실행한다.</li>          
        </ol>
        <p>이 과정을 참고해 예제를 만들어 보자.</p>
      </article>
    </section>
  </div>

  <h3 class="sub-header">9.2. 설치</h3>
  <div class="chapter">
    <section>
      <article>
        <p>이번 절에서는 스크래피를 설치하고, 프로젝트를 생성하고, 크롤링의 핵심이 디는 아이템 설정하기까지 살펴본다.</p>
      </article>
    </section>

    <h4 class="sub-header">9.2.1 - 스크래피 프로젝트 생성</h4>
    <section>
      <article>
        <p>스크래피는 크롤링 프레임워크이므로 단순히 코드 안에 패키지를 불러오듯 실행할 수 없다. 물론 이러한 번거로움을 상쇄할 만큼 강력한 기능을 제공한다.</p>
        <p>일단, <code>pip install scrapy</code> 명령을 실행해 스크래피를 설치한다. 설치 후 터미널에서 <code>scrapy</code> 명령어를 입력하면, 다음과 같이 사용가능한 옵션들을 확인할 수 있다.</p>
        <pre><code><blockquote><ol><li>$&nbsp;scrapy</li><li>Scrapy&nbsp;1.5.1&nbsp;-&nbsp;no&nbsp;active&nbsp;project</li><li>&nbsp;</li><li>Usage:</li><li>&nbsp;&nbsp;scrapy&nbsp;<font color="#33cc33">&lt;</font>command<font color="#33cc33">&gt;</font>&nbsp;[options]&nbsp;[args]</li><li>&nbsp;</li><li>Available&nbsp;commands:</li><li>&nbsp;&nbsp;bench&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Run&nbsp;quick&nbsp;benchmark&nbsp;test</li><li>&nbsp;&nbsp;fetch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fetch&nbsp;a&nbsp;URL&nbsp;using&nbsp;the&nbsp;Scrapy&nbsp;downloader</li><li>&nbsp;&nbsp;genspider&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generate&nbsp;new&nbsp;spider&nbsp;using&nbsp;pre-defined&nbsp;templates</li><li>&nbsp;&nbsp;runspider&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Run&nbsp;a&nbsp;self-contained&nbsp;spider&nbsp;<font color="#33cc33">(</font>without&nbsp;creating&nbsp;a&nbsp;project<font color="#33cc33">)</font></li><li>&nbsp;&nbsp;settings&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get&nbsp;settings&nbsp;values</li><li>&nbsp;&nbsp;shell&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Interactive&nbsp;scraping&nbsp;console</li><li>&nbsp;&nbsp;startproject&nbsp;&nbsp;Create&nbsp;new&nbsp;project</li><li>&nbsp;&nbsp;version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;Scrapy&nbsp;version</li><li>&nbsp;&nbsp;view&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Open&nbsp;URL&nbsp;<font color="#00b100">in</font>&nbsp;browser,&nbsp;as&nbsp;seen&nbsp;by&nbsp;Scrapy</li><li>&nbsp;</li><li>&nbsp;&nbsp;[&nbsp;more&nbsp;]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;More&nbsp;commands&nbsp;available&nbsp;when&nbsp;run&nbsp;from&nbsp;project&nbsp;directory</li><li>&nbsp;</li><li>Use&nbsp;&quot;scrapy&nbsp;<font color="#33cc33">&lt;</font>command<font color="#33cc33">&gt;</font>&nbsp;-h&quot;&nbsp;to&nbsp;see&nbsp;more&nbsp;info&nbsp;about&nbsp;a&nbsp;command</li></ol></blockquote></code></pre>
        <p>현재 위치에 활성화된 스크래피 프로젝트가 없다는 정보를 표시한 후 사용가능한 명령어 목록을 표시해준다. 새 프로젝트를 시작할 것이므로 <code>startproject</code>명령을 사용한다.</p>
        <p>scrapy startproject [프로젝트 이름] 명령을 실행해 새 프로젝트를 생성한다. 이름은 원하는대로 정하면 된다.</p>
        <pre><code>$ scrapy startproject hanbit</code></pre>
        셸에서 tree hanbit 명령을 실행하면 현재 위치에 생성된 스크래피 프로젝트 파일들을 확인할 수 있다.
        <pre><code><blockquote><ol><li>hanbit</li><li>├──&nbsp;hanbit</li><li>│  &nbsp;├──&nbsp;__init__.py</li><li>│  &nbsp;├──&nbsp;__pycache__</li><li>│  &nbsp;├──&nbsp;items.py</li><li>│  &nbsp;├──&nbsp;middlewares.py</li><li>│  &nbsp;├──&nbsp;pipelines.py</li><li>│  &nbsp;├──&nbsp;settings.py</li><li>│  &nbsp;└──&nbsp;spiders</li><li>│  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├──&nbsp;__init__.py</li><li>│  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└──&nbsp;__pycache__</li><li>└──&nbsp;scrapy.cfg</li><li>&nbsp;</li><li>4&nbsp;directories,&nbsp;7&nbsp;files</li></ol></blockquote></code></pre>
      </article>
    </section>

    <h4 class="sub-header">9.2.2 - 아이템 설정하기</h4>
    <section>
      <article>
        <p>크롤링하는 이유는 기본적으로 비정형 데이터인 웹 페이지를 목적에 맞게 일정한 형태로 가공할 상황이 가장 많을 것이다. 그래야 불규칙하게 흩어진 데이터를 정보로 만들 수 있다. 즉, 아이템 정의는 측정하기 위한 기준을 세우는 것이라 할 수 있다. 우선 프로젝트를 만들면서 생성된 파일 중에 items.py 파일을 열어보자.</p>
        <h5>코드9-1 items.py 파일 내용 확인</h5>
        <pre class="python"><code><blockquote><ol><li>#&nbsp;-*-&nbsp;coding:&nbsp;utf-8&nbsp;-*-</li><li>&nbsp;</li><li>#&nbsp;Define&nbsp;here&nbsp;the&nbsp;models&nbsp;<font color="#00b100">for</font>&nbsp;your&nbsp;scraped&nbsp;items</li><li>#</li><li>#&nbsp;See&nbsp;documentation&nbsp;<font color="#00b100">in</font>:</li><li>#&nbsp;https://doc.scrapy.org/en/latest/topics/items.html</li><li>&nbsp;</li><li>import&nbsp;scrapy</li><li>&nbsp;</li><li>&nbsp;</li><li>class&nbsp;HanbitItem<font color="#33cc33">(</font>scrapy.Item<font color="#33cc33">)</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;define&nbsp;the&nbsp;fields&nbsp;<font color="#00b100">for</font>&nbsp;your&nbsp;item&nbsp;here&nbsp;like:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;name&nbsp;=&nbsp;scrapy.Field<font color="#33cc33">()</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;pass</li></ol></blockquote></code></pre>
        <p># name = scrapy.Field() 주석이 아이템을 설정하는 코드의 예이다. 즉, &lt;크롤링할 항목이름> = scrapy.Field() 형태로 아이템을 설정하라는 뜻이다.</p>

        <p>다음은 한빛미디어의 도서 소개 페이지를 살펴보자. 보통 책 정보에는 표지, 책 이름, 저자 이름, 번역자 이름, 출간일, 책 페이지 수, ISBN 등의 정보를 볼 수 있다.</p>
        <p>이제 한빛미디어 홈페이지의 책 정보를 아이템으로 설정할 것이다. [코드9-2]를 참고해 items.py 파일을 수정한다.</p>
        <h5>코드9-2 items.py에 아이템 설정</h5>
        <pre class="python"><code><blockquote><ol><li>import&nbsp;scrapy</li><li>&nbsp;</li><li>class&nbsp;HanbitItem<font color="#33cc33">(</font>scrapy.Item<font color="#33cc33">)</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;define&nbsp;the&nbsp;fields&nbsp;<font color="#00b100">for</font>&nbsp;your&nbsp;item&nbsp;here&nbsp;like:</li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;책&nbsp;이름</li><li>&nbsp;&nbsp;&nbsp;&nbsp;book_title&nbsp;=&nbsp;scrapy.Field<font color="#33cc33">()</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;저자&nbsp;이름</li><li>&nbsp;&nbsp;&nbsp;&nbsp;book_author&nbsp;=&nbsp;scrapy.Field<font color="#33cc33">()</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;번역자&nbsp;이름</li><li>&nbsp;&nbsp;&nbsp;&nbsp;book_translator&nbsp;=&nbsp;scrapy.Field<font color="#33cc33">()</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;출간일</li><li>&nbsp;&nbsp;&nbsp;&nbsp;book_pub_date&nbsp;=&nbsp;scrapy.Field<font color="#33cc33">()</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;ISBN</li><li>&nbsp;&nbsp;&nbsp;&nbsp;book_isbn&nbsp;=&nbsp;scrapy.Field<font color="#33cc33">()</font></li></ol></blockquote></code></pre>
        <p>책 제목은 book_title, 저자 이름은 book_author, 번역자 이름은 book_translator, 출간일은 book_pub_date, ISBN은 book_isbn으로 설정했다. 이 아이템들로 해당 정보를 수집할 거라는 템플릿을 스크래피에 제시하는 역할을 한다.</p>
        
      </article>
    </section>
  </div>

  <h3 class="sub-header">9.3. 스파이더 만들기</h3>
  <div class="chapter">
    <section>
      <article>
        <p>수집할 정보를 결정해 아이템으로 설정했으니 실제 정보를 수집해야 한다. 이제 사이트를 크롤링할 스파이더(spider)를 만들 차례다.</p>

        <p>스크래피에서 스파이더를 생성해주는 명령어는 <code>genspider</code> 이다. 해당 디렉터리에서 <code>scrapy genspider</code> 명령을 실행하면 명령의 각종 옵션과 사용방법을 확인할 수 있다. 실행결과는 다음과 같다.</p>
        <pre><code><blockquote><ol><li>$&nbsp;scrapy&nbsp;genspider</li><li>Usage</li><li>=====</li><li>&nbsp;&nbsp;scrapy&nbsp;genspider&nbsp;[options]&nbsp;<font color="#33cc33">&lt;</font>name<font color="#33cc33">&gt;</font>&nbsp;<font color="#33cc33">&lt;</font>domain<font color="#33cc33">&gt;</font></li><li>&nbsp;</li><li>Generate&nbsp;new&nbsp;spider&nbsp;using&nbsp;pre-defined&nbsp;templates</li><li>&nbsp;</li><li>Options</li><li>=======</li><li>--help,&nbsp;-h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show&nbsp;this&nbsp;help&nbsp;message&nbsp;and&nbsp;<font color="#00b100">exit</font></li><li>--list,&nbsp;-l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&nbsp;available&nbsp;templates</li><li>--edit,&nbsp;-e&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Edit&nbsp;spider&nbsp;after&nbsp;creating&nbsp;it</li><li>--dump=TEMPLATE,&nbsp;-d&nbsp;TEMPLATE</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dump&nbsp;template&nbsp;to&nbsp;standard&nbsp;output</li><li>--template=TEMPLATE,&nbsp;-t&nbsp;TEMPLATE</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Uses&nbsp;a&nbsp;custom&nbsp;template.</li><li>--force&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00b100">If</font>&nbsp;the&nbsp;spider&nbsp;already&nbsp;exists,&nbsp;overwrite&nbsp;it&nbsp;with&nbsp;the</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template</li><li>&nbsp;</li><li>Global&nbsp;Options</li><li>--------------</li><li>--logfile=FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;file.&nbsp;<font color="#00b100">if</font>&nbsp;omitted&nbsp;stderr&nbsp;will&nbsp;be&nbsp;used</li><li>--loglevel=LEVEL,&nbsp;-L&nbsp;LEVEL</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;level&nbsp;<font color="#33cc33">(</font>default:&nbsp;DEBUG<font color="#33cc33">)</font></li><li>--nolog&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disable&nbsp;logging&nbsp;completely</li><li>--profile=FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;write&nbsp;python&nbsp;cProfile&nbsp;stats&nbsp;to&nbsp;FILE</li><li>--pidfile=FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;write&nbsp;process&nbsp;ID&nbsp;to&nbsp;FILE</li><li>--set=NAME=VALUE,&nbsp;-s&nbsp;NAME=VALUE</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#b1b100">set</font>/override&nbsp;setting&nbsp;<font color="#33cc33">(</font>may&nbsp;be&nbsp;repeated<font color="#33cc33">)</font></li><li>--pdb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enable&nbsp;pdb&nbsp;on&nbsp;failure</li></ol></blockquote></code></pre>
        <p>스파이더를 생성할 때 필요한 옵션은 -t이다. -t옵션은 크롤러의 템플릿을 결정할 때 사용한다. 추가로 간략하게 다음과 같은 옵션이 있다.</p>
        <ul>
          <li><strong>basic</strong>: 가장 기본적인 크롤러다. [domain]에서 설정한 페이지만 크롤링한다.</li>
          <li><strong>crawl</strong>: 설정한 규칙에 맞는 링크들을 재귀적으로 탐색한다. 아마 대부분의 크롤링 작업에서 이 스파이더를 사용할 것이다.</li>
          <li><strong>xmlfeed</strong>: xml 피드를 크롤링 한다. 더 자세하게 말하면 xml의 각 노드를 크롤링한다.</li>
          <li><strong>csvfeed</strong>: xmlfeed 크롤러와 비교했을 때 각 행을 크롤링한다는 차이가 있다.</li>
        </ul>
        <p>이제 <code>scrapy genspider -t crawl book_crawl hanbit.co.kr</code> 명령을 실행해 스파이더를 생성한다. 주의할 점은 도메인 이름을 입력할 때 'http://' 와 'www'를 생략해야 한다는 것이다. 결과는 다음과 같다.</p>
        <pre><code><blockquote><ol><li>$&nbsp;scrapy&nbsp;genspider&nbsp;-t&nbsp;crawl&nbsp;book_crawl&nbsp;hanbit.co.kr</li><li>Created&nbsp;spider&nbsp;'book_crawl'&nbsp;using&nbsp;template&nbsp;'crawl'&nbsp;<font color="#00b100">in</font>&nbsp;module:</li><li>&nbsp;&nbsp;hanbit.spiders.book_crawl</li></ol></blockquote></code></pre>
        <p>스파이더가 생성되었음을 알 수 있다. 스파이더 파일은 spiders 디렉터리에 생성된다.</p>
        <h5>코드9-3 book_crawl.py 내용 확인</h5>
        <pre class="python"><code><blockquote><ol><li><font color="#808080">#&nbsp;-*-&nbsp;coding:&nbsp;utf-8&nbsp;-*-</font></li><li><font color="#ff7700">import</font>&nbsp;scrapy</li><li><font color="#ff7700">from</font>&nbsp;scrapy.<font>linkextractors</font>&nbsp;<font color="#ff7700">import</font>&nbsp;LinkExtractor</li><li><font color="#ff7700">from</font>&nbsp;scrapy.<font>spiders</font>&nbsp;<font color="#ff7700">import</font>&nbsp;CrawlSpider<font color="#66cc66">,</font>&nbsp;Rule</li><li>&nbsp;</li><li>&nbsp;</li><li><font color="#ff7700">class</font>&nbsp;BookCrawlSpider<font>&#40;</font>CrawlSpider<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;<font color="#66cc66">=</font>&nbsp;<font color="#483d8b">'book_crawl'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;allowed_domains&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font><font color="#483d8b">'hanbit.co.kr'</font><font>&#93;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;start_urls&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font><font color="#483d8b">'http://hanbit.co.kr/'</font><font>&#93;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;rules&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rule<font>&#40;</font>LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font>r<font color="#483d8b">'Items/'</font><font>&#41;</font><font color="#66cc66">,</font>&nbsp;callback<font color="#66cc66">=</font><font color="#483d8b">'parse_item'</font><font color="#66cc66">,</font>&nbsp;follow<font color="#66cc66">=</font><font color="#008000">True</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">def</font>&nbsp;parse_item<font>&#40;</font><font color="#008000">self</font><font color="#66cc66">,</font>&nbsp;response<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#123;</font><font>&#125;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#i['domain_id']&nbsp;=&nbsp;response.xpath('//input[@id=&quot;sid&quot;]/@value').extract()</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#i['name']&nbsp;=&nbsp;response.xpath('//div[@id=&quot;name&quot;]').extract()</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#i['description']&nbsp;=&nbsp;response.xpath('//div[@id=&quot;description&quot;]').extract()</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">return</font>&nbsp;i</li></ol></blockquote></code></pre>
        <p>코드의 start_urls 를 살펴보면 입력시 생략했던 http://가 있음을 확인할 수 있다. 참고로 스파이더 생성에 관한 더 자세한 정보는 스크래피의 개발 문서 '<a href="http://doc.scrapy.org/en/1.4/topics/spiders/html#generic-spiders" target="_blank">Generic Spiders</a>' 를 참고한다.</p>
      </article>
    </section>

    <h4 class="sub-header">9.3.1 - 스파이더 파일 수정하기</h4>
    <section>
      <article>
        <p>스파이더 파일을 생성했다면, 이제 목적에 맞게 스파이더 파일을 수정해야 한다. 여기서는 수집할 링크의 규칙을 정하는 rules 와 규칙에 맞는 URL 을 발견했을 때 해당 URL 의 내용을 파싱하고 정제할 parse_item() 을 수정해야 한다. 우선 book_crawl.py를 수정할 때의 코드 기본 구조를 살펴보자. [코드9-4]와 같다.</p>
        <h5>코드9-4 스파이더 기본 구조 작성</h5>
        <pre class="python"><code><blockquote><ol><li><font color="#ff7700">class</font>&nbsp;BookCrawlSpider<font>&#40;</font>CrawlSpider<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤러의&nbsp;이름입니다.&nbsp;실제&nbsp;크롤링을&nbsp;실행할&nbsp;때&nbsp;사용합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;<font color="#66cc66">=</font>&nbsp;<font color="#483d8b">'book_crawl'</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤러를&nbsp;실행할&nbsp;도메인을&nbsp;여기서&nbsp;지정합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;해당&nbsp;서버에서&nbsp;실행되다가&nbsp;허용된&nbsp;도메인&nbsp;이외는&nbsp;무시합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;allowed_domains&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font><font color="#483d8b">'hanbit.co.kr'</font><font>&#93;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;시작점으로&nbsp;사용할&nbsp;URL입니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;리스트로&nbsp;지정해&nbsp;한&nbsp;번에&nbsp;여러&nbsp;웹페이지에서&nbsp;크롤링을&nbsp;시작하게&nbsp;할&nbsp;수</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;있습니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;start_urls&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font><font color="#483d8b">'http://hanbit.co.kr/'</font><font>&#93;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤러가&nbsp;어떻게&nbsp;작동할지&nbsp;규칙을&nbsp;설정합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤러는&nbsp;시작점의&nbsp;모든&nbsp;링크를&nbsp;검사한&nbsp;후,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;규칙에&nbsp;맞는&nbsp;링크가&nbsp;있으면&nbsp;정해진&nbsp;콜백&nbsp;메서드를&nbsp;실행합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;rules&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤링할&nbsp;링크를&nbsp;정규&nbsp;표현식을&nbsp;이용해서&nbsp;표현합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font><font color="#483d8b">'Items/'</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;해당&nbsp;링크에&nbsp;요청을&nbsp;보내고&nbsp;응답이&nbsp;오면&nbsp;실행할&nbsp;콜백&nbsp;메서드를</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;지정합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback&nbsp;<font color="#66cc66">=</font>&nbsp;<font color="#483d8b">'parse_item'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;True로&nbsp;설정되어&nbsp;있으면,&nbsp;응답에&nbsp;다시&nbsp;한번&nbsp;rules를&nbsp;적용해</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;재귀적으로&nbsp;실행합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;follow<font color="#66cc66">=</font><font color="#008000">True</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;이렇게&nbsp;여러&nbsp;개의&nbsp;규칙을&nbsp;설정할&nbsp;수&nbsp;있습니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;Rule(LinkExtractor(allow=r'.*'),&nbsp;callback='parse_item',&nbsp;follow=True),</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">def</font>&nbsp;parse_item<font>&#40;</font><font color="#008000">self</font><font color="#66cc66">,</font>&nbsp;response<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'''rules를&nbsp;통과한&nbsp;링크에&nbsp;요청을&nbsp;보내&nbsp;응답을&nbsp;받으면&nbsp;Rule()에&nbsp;설정한&nbsp;콜백</font></li><li><font color="#483d8b">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;메서드를&nbsp;해당&nbsp;응답결과에&nbsp;실행합니다.</font></li><li><font color="#483d8b">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;따라서&nbsp;response를&nbsp;파라미터로&nbsp;받고&nbsp;XPath라든가&nbsp;CSS&nbsp;선택자를&nbsp;이용해서</font></li><li><font color="#483d8b">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;원하는&nbsp;요소를&nbsp;추출할&nbsp;수&nbsp;있습니다.'''</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;앞서&nbsp;설정한&nbsp;아이템에&nbsp;맞춰&nbsp;딕셔너리를&nbsp;채우고&nbsp;반환합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#123;</font><font>&#125;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#i['domain_id']&nbsp;=&nbsp;response.xpath('//input[@id=&quot;sid&quot;]/@value').extract()</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#i['name']&nbsp;=&nbsp;response.xpath('//div[@id=&quot;name&quot;]').extract()</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#i['description']&nbsp;=&nbsp;response.xpath('//div[@id=&quot;description&quot;]').extract()</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">return</font>&nbsp;i</li></ol></blockquote></code></pre>
        <p>주석을 참고하면 코드를 이해하는데 큰 어려움이 없을 것이다.</p>
      </article>
    </section>
  </div>

  <h3 class="sub-header">9.4. 스파이더 규칙 설정하기</h3>
  <div class="chapter">
    <section>
      <article>
        <p>9.3.1에서 코드를 수정한 것은 스파이더가 제대로 동작하기 위한 기본 골격을 만들어준 것이다. 그럼 이제 스파이더의 세부 규칙을 설정해야한다. 우선 Rule()부터 살펴보자.</p>
        <pre class="python"><code><blockquote><ol><li>rules&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rule<font>&#40;</font>LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font>r<font color="#483d8b">'Items/'</font><font>&#41;</font><font color="#66cc66">,</font>&nbsp;callback<font color="#66cc66">=</font><font color="#483d8b">'parse_item'</font><font color="#66cc66">,</font>&nbsp;follow<font color="#66cc66">=</font><font color="#008000">True</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;<font>&#41;</font></li></ol></blockquote></code></pre>
        <p>rules는 이 스파이더가 크롤링할 링크의 규칙을 정의한다. LinkExtractor 에는 수집할 데이터 및 링크가 담긴 주소를 현재 도메인에 상대 주소로 적는다. 따라서 수집하려는 데이터가 담긴 페이지 링크를 정규표현식으로 적절하게 구분할 수 있어야 한다.</p>

        <p>한빛미디어의 책 정보를 보여주는 페이지는 '<a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B8463790401" target="_blank">http://www.hanbit.co.kr/store/books/look.php?p_code=B8463790401</a>' 과 같은 형태이다. 여기서 도메인을 제외하면 'store/books/look.php?p_code=B8463790401' 부분이 남는다. 그리고 최종 책 정보에 해당하는 변하는 부분은 상품코드에 해당하는 'B8463790401' 부분이다.</p>
        <p>따라서 최종 해당 URL의 정규표현식은 <code>store/books/look.php\?p_code=.*</code>가 된다. 참고로 <code>?</code> 는 정규표현식에서 사용하는 특수문자 중 하나이므로 텍스트로 사용한다는걸 나타내기 위해 역슬래시(\)를 사용했다.</p>
        <p>allow에는 String이나 String List를 전달할 수 있으므로 HTTP 요청을 보내서 callback에 해당 요청을 처리할 함수를 지정하면 된다.</p>
        <p>그럼 정의된 규칙을 코드에 넣어보자. 다음과 같다.</p>
        <h5>코드9-5 규칙 설정하기 1</h5>
        <pre class="python"><code><blockquote><ol><li><font color="#808080">#&nbsp;-*-&nbsp;coding:&nbsp;utf-8&nbsp;-*-</font></li><li><font color="#ff7700">import</font>&nbsp;scrapy</li><li><font color="#ff7700">from</font>&nbsp;scrapy.<font>linkextractors</font>&nbsp;<font color="#ff7700">import</font>&nbsp;LinkExtractor</li><li><font color="#ff7700">from</font>&nbsp;scrapy.<font>spiders</font>&nbsp;<font color="#ff7700">import</font>&nbsp;CrawlSpider<font color="#66cc66">,</font>&nbsp;Rule</li><li>&nbsp;</li><li>&nbsp;</li><li><font color="#ff7700">class</font>&nbsp;BookCrawlSpider<font>&#40;</font>CrawlSpider<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;<font color="#66cc66">=</font>&nbsp;<font color="#483d8b">'book_crawl'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;allowed_domains&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font><font color="#483d8b">'hanbit.co.kr'</font><font>&#93;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;start_urls&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font><font color="#483d8b">'http://hanbit.co.kr/'</font><font>&#93;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;rules&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;store/books/look.php?p_code=B8463790401</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rule<font>&#40;</font>LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font>r<font color="#483d8b">'store/books/look.php<font color="#000099">\?</font>p_code=.*'</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback<font color="#66cc66">=</font><font color="#483d8b">'parse_item'</font><font color="#66cc66">,</font>&nbsp;follow<font color="#66cc66">=</font><font color="#008000">True</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">def</font>&nbsp;parse_item<font>&#40;</font><font color="#008000">self</font><font color="#66cc66">,</font>&nbsp;response<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#123;</font><font>&#125;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">return</font>&nbsp;i</li></ol></blockquote></code></pre>
        <p>수정한 코드는 정규표현식 <code>store/books/look.php\?p_code=.*</code>를 만족하는 모든 링크에 <code>parse_item()</code> 함수를 실행하고, 다시 한번 해당 페이지에 재귀적으로 rules 를 적용하라는 뜻이 된다. 참고로 <code>callback='parse_item'</code>과 <code>follow=True</code>를 생략하면 정규 표현식을 만족하는 링크들을 크롤링할 대상에 넣어두기만 한다.</p>
        <p>앞의 규칙만으로 모든 책의 목록을 가져올 수는 없다. 이제 각각의 책 목록이 있는 페이지를 탐색하는 새 규칙과 시작점을 추가해보자. 이에 해당하는 한빛미디어 홈페이지의 항목은 '카테고리'이다. 카테고리에서 확인해야할 항목은 카테고리 목록의 개수와 해당 카테고리의 페이지 수이다. 이를 추출해야 그 아래에 있는 책 링크들을 얻을 수 있다. 다음 그림과 같다.</p>
        <h5>그림9-1 카테고리 수 확인</h5>
        <img src="/img/img10.png" alt="카테고리 수 확인">
        <h5>그림9-2 페이지 수 확인</h5>
        <img src="/img/img11.png" class="bo" alt="페이지 수 확인">
        <p>각 카테고리의 세부 URL을 분석해 보면 'store/books/category_list.html?cate_cd=카테고리숫자'의 형태이고, 각 페이지의 세부 URL은 'store/books/category_list.html?page=페이지숫자&cate_cd=세자리숫자&srt=p_pub_date' 의 형태이다. 이를 rules 에 넣기 위해 적절히 정규표현식을 만들어 보자.</p>
        <p>먼저 각 카테고리들을 전부 시작점에 넣어보자. 한빛출판네트워크(hanbit.co.kr/store/books/category_list.html) 페이지의 카테고리는 8개가 있으니 다음과 같이 start_urls를 지정한다.</p>
        <pre class="python"><code><blockquote><ol><li>start_urls&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=001'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=002'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=003'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=004'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=005'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=006'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=007'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=008'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font>&#93;</font></li></ol></blockquote></code></pre>
        <p>다음에는 rules 에 추가로 크롤링할 웹 페이지의 규칙을 넣어보자. 카테고리 페이지들인 'store/books/category_list.html?page=페이지숫자&cate_cd=카테고리숫자&srt=p_pub_date'를 정규표현식으로 전환하면 store/books/category_list.html?page=\d+&cate_cd=00\d+&srt=p_pub_date 가 된다. 이를 반영한 rules 코드는 다음과 같다.</p>
        <pre class="python"><code><blockquote><ol><li>rules&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;store/books/look.php?p_code=B8463790401</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rule<font>&#40;</font>LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font>r<font color="#483d8b">'store/books/look.php<font color="#000099">\?</font>p_code=.*'</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback<font color="#66cc66">=</font><font color="#483d8b">'parse_item'</font><font color="#66cc66">,</font>&nbsp;follow<font color="#66cc66">=</font><font color="#008000">True</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;store/books/category_list.html?page=2&amp;cate_cd=003&amp;srt=p_pub_date</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rule<font>&#40;</font>LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r<font color="#483d8b">'store/books/category_list<font color="#000099">\.</font>html<font color="#000099">\?</font>page=<font color="#000099">\d</font>+&amp;cate_cd=00<font color="#000099">\d</font>+&amp;srt=p_pub_date'</font><font>&#41;</font><font>&#41;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font>&#41;</font></li></ol></blockquote></code></pre>
        <p>위 두 부분을 반영하면 [코드9-6]과 같다.</p>
        <h5>코드9-6 규칙 설정하기 2</h5>
        <pre class="python"><code><blockquote><ol><li><font color="#808080">#&nbsp;-*-&nbsp;coding:&nbsp;utf-8&nbsp;-*-</font></li><li><font color="#ff7700">import</font>&nbsp;scrapy</li><li><font color="#ff7700">from</font>&nbsp;scrapy.<font>linkextractors</font>&nbsp;<font color="#ff7700">import</font>&nbsp;LinkExtractor</li><li><font color="#ff7700">from</font>&nbsp;scrapy.<font>spiders</font>&nbsp;<font color="#ff7700">import</font>&nbsp;CrawlSpider<font color="#66cc66">,</font>&nbsp;Rule</li><li>&nbsp;</li><li>&nbsp;</li><li><font color="#ff7700">class</font>&nbsp;BookCrawlSpider<font>&#40;</font>CrawlSpider<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;<font color="#66cc66">=</font>&nbsp;<font color="#483d8b">'book_crawl'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;allowed_domains&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font><font color="#483d8b">'hanbit.co.kr'</font><font>&#93;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;start_urls&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=001'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=002'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=003'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=004'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=005'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=006'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=007'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=008'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font>&#93;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;rules&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;store/books/look.php?p_code=B8463790401</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rule<font>&#40;</font>LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font>r<font color="#483d8b">'store/books/look.php<font color="#000099">\?</font>p_code=.*'</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback<font color="#66cc66">=</font><font color="#483d8b">'parse_item'</font><font color="#66cc66">,</font>&nbsp;follow<font color="#66cc66">=</font><font color="#008000">True</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;store/books/category_list.html?page=2&amp;cate_cd=003&amp;srt=p_pub_date</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rule<font>&#40;</font>LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r<font color="#483d8b">'store/books/category_list<font color="#000099">\.</font>html<font color="#000099">\?</font>page=<font color="#000099">\d</font>+&amp;cate_cd=00<font color="#000099">\d</font>+&amp;srt=p_pub_date'</font><font>&#41;</font><font>&#41;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">def</font>&nbsp;parse_item<font>&#40;</font><font color="#008000">self</font><font color="#66cc66">,</font>&nbsp;response<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#123;</font><font>&#125;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">return</font>&nbsp;i</li></ol></blockquote></code></pre>
        <p>이제 스파이더는 한빛미디어 홈페이지의 모든 개별 상품 페이지를 크롤링 할 것이다. 그리고 모든 개별 상품 페이지의 요청 응답에 콜백 메서드로 parse_item() 함수를 실행한다.</p>
      </article>
    </section>
  </div>

  <h3 class="sub-header">9.5. 파서 함수 정의하기</h3>
  <div class="chapter">
    <section>
      <article>
        <p>parse_item() 함수는 개별 상품 페이지 각각을 요청하면 응답을 파싱해서 원하는 데이터를 추출하는 함수이다. 응답으로 받은 HTML 코드 안에서 <a href="https://ko.wikipedia.org/wiki/XPath" target="_blank">XPath</a>나 CSS 선택자 형식으로 데이터를 뽑아낼 수 있다.</p>
        <p>이제 개별 상품 페이지에서 앞에서 정의한 아이템에 해당하는 정보들을 찾아봐야 한다. 다음 그림과 같다.</p>
        <h5>그림9-3 상품 페이지 분석</h5>
        <img src="/img/img12.png" alt="상품 페이지 분석">
        <p>주목해야 할 곳은 오른쪽의 책정보를 HTML 태그로 표현한 부분이다. 코드 구조는 다음과 같다.</p>
        <pre class="html"><code><blockquote><ol><li><font color="#009900">&lt;<font color="#000000">div</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;store_product_info_box&quot;</font>&gt;</font></li><li>&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">h3</font>&gt;</font>개발자를&nbsp;위한&nbsp;파이썬<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">h3</font>&gt;</font></li><li>&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">p</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;stit&quot;</font>&gt;</font>현장에서&nbsp;일하는&nbsp;개발자&nbsp;맞춤&nbsp;입문서<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">p</font>&gt;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">div</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;info_area&quot;</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">div</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;info_ico&quot;</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">p</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;ico_m&quot;</font>&gt;</font>한빛미디어<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">p</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">p</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;ico_book1&quot;</font>&gt;</font>집필서<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">p</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">p</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;ico_shopping1&quot;</font>&gt;</font>판매중<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">p</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">div</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">div</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;sns_ico&quot;</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">span</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;ico_facebook&quot;</font>&gt;&lt;<font color="#000000">a</font>&nbsp;<font color="#000066">href</font><font color="#66cc66">=</font><font color="#ff0000">&quot;http://www.facebook.com/share.php?u=http://www.hanbit.co.kr/store/books/look.php?p_code=B7329046703&quot;</font>&nbsp;<font color="#000066">target</font><font color="#66cc66">=</font><font color="#ff0000">&quot;_blank&quot;</font>&gt;</font>페이스북&nbsp;퍼가기<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">a</font>&gt;&lt;<font color="#66cc66">/</font><font color="#000000">span</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">span</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;ico_google&quot;</font>&gt;&lt;<font color="#000000">a</font>&nbsp;<font color="#000066">href</font><font color="#66cc66">=</font><font color="#ff0000">&quot;https://plus.google.com/share?url=http://www.hanbit.co.kr/store/books/look.php?p_code=B7329046703&quot;</font>&nbsp;<font color="#000066">target</font><font color="#66cc66">=</font><font color="#ff0000">&quot;_blank&quot;</font>&gt;</font>구글+&nbsp;퍼가기<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">a</font>&gt;&lt;<font color="#66cc66">/</font><font color="#000000">span</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">span</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;ico_twitter&quot;</font>&gt;&lt;<font color="#000000">a</font>&nbsp;<font color="#000066">href</font><font color="#66cc66">=</font><font color="#ff0000">&quot;http://twitter.com/share?text=%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC+%EC%9C%84%ED%95%9C+%ED%8C%8C%EC%9D%B4%EC%8D%AC&amp;url=http://www.hanbit.co.kr/store/books/look.php?p_code=B7329046703&quot;</font>&nbsp;<font color="#000066">target</font><font color="#66cc66">=</font><font color="#ff0000">&quot;_blank&quot;</font>&gt;</font>트위터&nbsp;퍼가기<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">a</font>&gt;&lt;<font color="#66cc66">/</font><font color="#000000">span</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">div</font>&gt;</font></li><li>&nbsp;&nbsp;<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">div</font>&gt;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">ul</font>&nbsp;<font color="#000066">class</font><font color="#66cc66">=</font><font color="#ff0000">&quot;info_list&quot;</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">li</font>&gt;&lt;<font color="#000000">strong</font>&gt;</font>저자&nbsp;:&nbsp;<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">strong</font>&gt;&lt;<font color="#000000">span</font>&gt;</font>윤웅식&nbsp;<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">span</font>&gt;&lt;<font color="#66cc66">/</font><font color="#000000">li</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">li</font>&gt;&lt;<font color="#000000">strong</font>&gt;</font>출간&nbsp;:&nbsp;<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">strong</font>&gt;&lt;<font color="#000000">span</font>&gt;</font>2017-11-01<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">span</font>&gt;&lt;<font color="#66cc66">/</font><font color="#000000">li</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">li</font>&gt;&lt;<font color="#000000">strong</font>&gt;</font>페이지&nbsp;:&nbsp;<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">strong</font>&gt;&lt;<font color="#000000">span</font>&gt;</font>296&nbsp;쪽<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">span</font>&gt;&lt;<font color="#66cc66">/</font><font color="#000000">li</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">li</font>&gt;&lt;<font color="#000000">strong</font>&gt;</font>ISBN&nbsp;:&nbsp;<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">strong</font>&gt;&lt;<font color="#000000">span</font>&gt;</font>9791162240205<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">span</font>&gt;&lt;<font color="#66cc66">/</font><font color="#000000">li</font>&gt;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#009900">&lt;<font color="#000000">li</font>&gt;&lt;<font color="#000000">strong</font>&gt;</font>물류코드&nbsp;:<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">strong</font>&gt;&lt;<font color="#000000">span</font>&gt;</font>10020<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">span</font>&gt;&lt;<font color="#66cc66">/</font><font color="#000000">li</font>&gt;</font></li><li>&nbsp;&nbsp;<font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">ul</font>&gt;</font></li><li>&nbsp;&nbsp;<font color="#808080">&lt;!--&nbsp;중간&nbsp;생략&nbsp;--&gt;</font></li><li><font color="#009900">&lt;<font color="#66cc66">/</font><font color="#000000">div</font>&gt;</font></li></ol></blockquote></code></pre>
        <p>실제로 불필요한 태그는 제거했다. 여기서 제목고 책 정보들을 뽑아낼 수 있어야 한다. 그래야 response 에서 정보를 가져올 수 있다.</p>
        <p>필요한 정보는 제목, 저자 정보 등의 CSS 선택자나 XPath 이다. 이런 경로는 웹 브라우저의 개발자 도구에서 쉽게 추출할 수 있게 지원한다. [그림9-4]는 크롬 개발자 도구에서 책이름이 적힌 &lt;h3>태그에 오른쪽 마우스 버튼을 클릭했을 때 나오는 컨텍스트 메뉴이다. [Copy]->[Copy XPath]를 선택하면 XPath를 복사할 수 있다.</p>
        <h5>그림9-4 XPath 경로 복사</h5>
        <img src="/img/img13.png" class="bo" alt="XPath 경로 복사">
        <p>다행히 한빛미디어의 개별 상품 페이지는 여러 권의 책을 소개하지 않으므로 XPath를 복사해서 사용해도 된다. 만약 게시판 처럼 한 페이지에서 여러 권의 책을 소개하는 형태라면 다른 방법을 사용하는 것이 좋다.</p>
        <p>책 이름의 XPath는 //*[@id="container"]/div[1]/div[1]/div[1]/div[2]/h3 이고 뒤에 책이름 텍스트를 가져오기 위해 /text() 를 붙여준다. 이를 콜백함수의 파라미터로 전달한 response에 넣어야 한다. 아까 책 이름을 book_title로 설정했으므로 다음과 같이 코드를 작성한다.</p>
        <pre class="python"><code><blockquote><ol><li><font color="#ff7700">def</font>&nbsp;parse_item<font>&#40;</font><font color="#008000">self</font><font color="#66cc66">,</font>&nbsp;response<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#123;</font><font>&#125;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_title'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/h3/text()'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">return</font>&nbsp;i</li></ol></blockquote></code></pre>
        <p>이제 책 제목을 수집한 후 스크래피가 처리해서 이미 만들어 두었던 아이템 클래스와 맞춰준다. 그럼 나머지 정보도 채워보자.</p>
        <div class="tip">
          <h4>NOTE_ XPath와 CSS 선택자를 함께 사용하는 예</h4>
          <p>스크래피는 response에서 CSS 선택자와 XPath를 함께 사용할 수 있도록 해두었다. 다음 예의 세번째 코드는 CSS 선택자와 XPath를 함께 사용한 예이다.</p>
          <pre class="python"><code><blockquote><ol><li><font color="#66cc66">&gt;&gt;&gt;</font>&nbsp;<font color="#ff7700">from</font>&nbsp;scrapy&nbsp;<font color="#ff7700">import</font>&nbsp;Selector</li><li><font color="#66cc66">&gt;&gt;&gt;</font>&nbsp;sel&nbsp;<font color="#66cc66">=</font>&nbsp;Selector<font>&#40;</font>text<font color="#66cc66">=</font><font color="#483d8b">'&amp;lt;div&nbsp;class=&quot;hero&nbsp;shout&quot;&gt;&amp;lt;time&nbsp;datetime=&quot;2014-07-23&nbsp;19:00&quot;&gt;Special&nbsp;date&amp;lt;/time&gt;&amp;lt;/div&gt;'</font><font>&#41;</font></li><li><font color="#66cc66">&gt;&gt;&gt;</font>&nbsp;sel.<font>css</font><font>&#40;</font><font color="#483d8b">'.shout'</font><font>&#41;</font>.<font>xpath</font><font>&#40;</font><font color="#483d8b">'./time/@datetime'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li><font>&#91;</font>u<font color="#483d8b">'2014-07-23&nbsp;19:00'</font><font>&#93;</font></li></ol></blockquote></code></pre>
          <p>앞서 언급한 것처럼 같은 위상의 데이터가 한 페이지에 존재할 수 없으므로 상황에 따라 두 가지를 복합적으로 사용하는 것을 적극 고려하는 편이 좋다.</p>
          <p>참고로 XPath쪽이 대부분 좀 더 간결한 선택을 할 수 있게 한다.</p>
        </div>
        <p>책 이름과 같은 방식으로 저자 이름, 번역자 이름, 출간일, ISBN을 수집하는 코드를 작성하면 다음과 같다.</p>
        <pre class="python"><code><blockquote><ol><li><font color="#ff7700">def</font>&nbsp;parse_item<font>&#40;</font><font color="#008000">self</font><font color="#66cc66">,</font>&nbsp;response<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#123;</font><font>&#125;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;책&nbsp;이름</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_title'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/h3/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;저자&nbsp;이름</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_author'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/ul/li'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'[strong/text()=&quot;저자&nbsp;:&nbsp;&quot;]/span/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;번역자&nbsp;이름</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_translator'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/ul/li'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'[strong/text()=&quot;번역&nbsp;:&nbsp;&quot;]/span/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;출간일</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_pub_date'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/ul/li'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'[strong/text()=&quot;출간&nbsp;:&nbsp;&quot;]/span/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;ISBN</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_isbn'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/ul/li'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'[strong/text()=&quot;ISBN&nbsp;:&nbsp;&quot;]/span/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">return</font>&nbsp;i</li></ol></blockquote></code></pre>
        <p>참고로 한빛믿어의 개별 상품 페이지 안에서 저자는 언제나 있지만, 번역자는 있을 수도 없을 수도 있다. 따라서 book_author의 response.xpath 에는 숫자 대신 형제 요소룰 검사하는 strong/text()="항목이름 : "을 넣었다. CSS 선택자로는 할 수 없는 부분이다.</p>
      </article>
    </section>
  </div>

  <h3 class="sub-header">9.6. 완성된 스파이더 클래스</h3>
  <div class="chapter">
    <section>
      <article>
        <p>최종 완성된 스파이더 클래스는 다음과 같다.</p>
        <pre class="python"><code><blockquote><ol><li><font color="#808080">#&nbsp;-*-&nbsp;coding:&nbsp;utf-8&nbsp;-*-</font></li><li><font color="#ff7700">import</font>&nbsp;scrapy</li><li><font color="#ff7700">from</font>&nbsp;scrapy.<font>linkextractors</font>&nbsp;<font color="#ff7700">import</font>&nbsp;LinkExtractor</li><li><font color="#ff7700">from</font>&nbsp;scrapy.<font>spiders</font>&nbsp;<font color="#ff7700">import</font>&nbsp;CrawlSpider<font color="#66cc66">,</font>&nbsp;Rule</li><li>&nbsp;</li><li>&nbsp;</li><li><font color="#ff7700">class</font>&nbsp;BookCrawlSpider<font>&#40;</font>CrawlSpider<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤러의&nbsp;이름입니다.&nbsp;실제&nbsp;크롤링을&nbsp;실행할&nbsp;때&nbsp;사용합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;<font color="#66cc66">=</font>&nbsp;<font color="#483d8b">'book_crawl'</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤러&nbsp;실행을&nbsp;허용할&nbsp;도메인을&nbsp;여기서&nbsp;지정합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;해당&nbsp;서버에서&nbsp;실행되다가&nbsp;허용된&nbsp;도메인&nbsp;이외는&nbsp;무시합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;allowed_domains&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font><font color="#483d8b">'hanbit.co.kr'</font><font>&#93;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;시작점으로&nbsp;사용할&nbsp;URL입니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;리스트로&nbsp;지정해&nbsp;한&nbsp;번에&nbsp;여러&nbsp;웹&nbsp;페이지에서&nbsp;크롤링을&nbsp;시작하게&nbsp;할&nbsp;수&nbsp;있습니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;start_urls&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#91;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=001'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=002'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=003'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=004'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=005'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=006'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=007'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'http://hanbit.co.kr/store/books/category_list.html?cate_cd=008'</font><font color="#66cc66">,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font>&#93;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤러가&nbsp;어떻게&nbsp;작동할지&nbsp;규칙을&nbsp;설정합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤러는&nbsp;시작점의&nbsp;모든&nbsp;링크를&nbsp;검사한&nbsp;후,</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;규칙에&nbsp;맞는&nbsp;링크가&nbsp;있으면&nbsp;정해진&nbsp;콜백&nbsp;메서드를&nbsp;실행합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;follow가&nbsp;True면&nbsp;해당&nbsp;페이지의&nbsp;링크를&nbsp;대상으로&nbsp;재귀적으로&nbsp;앞&nbsp;작업을&nbsp;반복합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;rules&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rule<font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;크롤링할&nbsp;링크를&nbsp;정규표현식을&nbsp;이용해서&nbsp;표현합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;store/books/look.php?p_code=B8463790401</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font>r<font color="#483d8b">'store/books/look.php<font color="#000099">\?</font>p_code=.*'</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;해당&nbsp;링크에&nbsp;요청을&nbsp;보내고&nbsp;응답이&nbsp;오면&nbsp;실행할&nbsp;콜백메서드를&nbsp;지정합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback<font color="#66cc66">=</font><font color="#483d8b">'parse_item'</font><font color="#66cc66">,</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;True&nbsp;로&nbsp;지정되어&nbsp;있으면,&nbsp;응답에&nbsp;다시&nbsp;한번&nbsp;rules를&nbsp;적용해&nbsp;재귀적으로&nbsp;실행합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;follow<font color="#66cc66">=</font><font color="#008000">True</font><font>&#41;</font><font color="#66cc66">,</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;이렇게&nbsp;여러&nbsp;개의&nbsp;규칙을&nbsp;설정할&nbsp;수&nbsp;있습니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;Rule(LinkExtractor(allow=r'.*'),&nbsp;callback='parse_item',&nbsp;follow=True),</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;store/books/category_list.html?page=2&amp;cate_cd=003&amp;srt=p_pub_date</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rule<font>&#40;</font>LinkExtractor<font>&#40;</font>allow<font color="#66cc66">=</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r<font color="#483d8b">'store/books/category_list<font color="#000099">\.</font>html<font color="#000099">\?</font>page=<font color="#000099">\d</font>+&amp;cate_cd=00<font color="#000099">\d</font>+&amp;srt=p_pub_date'</font><font>&#41;</font><font>&#41;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">def</font>&nbsp;parse_item<font>&#40;</font><font color="#008000">self</font><font color="#66cc66">,</font>&nbsp;response<font>&#41;</font>:</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'''</font></li><li><font color="#483d8b">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rules를&nbsp;통과한&nbsp;링크에&nbsp;요청을&nbsp;보내&nbsp;응답을&nbsp;받으면&nbsp;Rule()에&nbsp;설정한&nbsp;콜백&nbsp;메서드를</font></li><li><font color="#483d8b">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;해당&nbsp;응답&nbsp;결과에&nbsp;실행합니다.</font></li><li><font color="#483d8b">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;따라서&nbsp;response를&nbsp;파라미터로&nbsp;받고&nbsp;XPath라든가&nbsp;CSS&nbsp;선택자를&nbsp;이용해서</font></li><li><font color="#483d8b">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;원하는&nbsp;요소를&nbsp;추출할&nbsp;수&nbsp;있습니다.</font></li><li><font color="#483d8b">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'''</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;앞서&nbsp;설정한&nbsp;item에&nbsp;맞춰&nbsp;딕셔너리를&nbsp;채우고&nbsp;반환합니다.</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;<font color="#66cc66">=</font>&nbsp;<font>&#123;</font><font>&#125;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;i['domain_id]&nbsp;=&nbsp;response.xpath('//input[@id=&quot;sid&quot;]/@value').extract()</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;i['name']&nbsp;=&nbsp;response.xpath('//div[@id=&quot;name&quot;]').extract()</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;i['description']&nbsp;=&nbsp;response.xpath('//div[@id=&quot;description']').extract()</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;책&nbsp;이름</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_title'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/h3/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;저자&nbsp;이름</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_author'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/ul/li'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'[strong/text()=&quot;저자&nbsp;:&nbsp;&quot;]/span/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;번역자&nbsp;이름</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_translator'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/ul/li'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'[strong/text()=&quot;번역&nbsp;:&nbsp;&quot;]/span/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;출간일</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_pub_date'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/ul/li'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'[strong/text()=&quot;출간&nbsp;:&nbsp;&quot;]/span/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">#&nbsp;ISBN</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<font>&#91;</font><font color="#483d8b">'book_isbn'</font><font>&#93;</font>&nbsp;<font color="#66cc66">=</font>&nbsp;response.<font>xpath</font><font>&#40;</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'//*[@id=&quot;container&quot;]/div[1]/div[1]/div[1]/div[2]/ul/li'</font></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#483d8b">'[strong/text()=&quot;ISBN&nbsp;:&nbsp;&quot;]/span/text()'</font><font>&#41;</font>.<font>extract</font><font>&#40;</font><font>&#41;</font></li><li>&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">return</font>&nbsp;i</li></ol></blockquote></code></pre>
      </article>
    </section>
  </div>

  <h3 class="sub-header">9.7. 크롤링 GO!</h3>
  <div class="chapter">
    <section>
      <article>
        <p>이제 크롤링을 시작하라고 명령하면 된다. 크롤링을 하려면 프로젝트 폴더에서 scrapy crawl 명령을 실행하면 된다. 명령 구성은 scrapy crawl [크롤러 이름] -o [출력파일 이름] -t [출력형식] 이다. 따라서 CSV 형식으로 book_list.csv라는 파일에 크롤링한 아이템을 저장하는 명령은 다음과 같다.</p>
        <pre><code><blockquote><ol><li>$&nbsp;scrapy&nbsp;crawl&nbsp;book_crawl&nbsp;-o&nbsp;book_list.csv&nbsp;-t&nbsp;csv</li></ol></blockquote></code></pre>
        <p>실행 결과의 일부는 다음과 같다.</p>
        <blockquote>
book_title,book_author,book_translator,book_pub_date,book_isbn<br>
아주 큰 스티커북 - 공룡,Clorophyl Editions 출판사 ,편집부 ,2018-04-26,9791162240571<br>
리얼 뉴질랜드 [2018~2019년 최신판],"박선영(Rolly) , 김상훈(Paul) ",,2018-07-05,9791188007165<br>
길고양이들은 배고프지 말 것,이상교 ,,2018-07-17,9791157842711<br>
D-30 단기합격 솔루션 전기산업기사 필기 핵심 이론 & 엄선된 필수 기출문제 558선(개정판),김상훈 ,,2018-04-12,9791156643586<br>
"3D 프린터 101 : 기초부터 활용까지, 3D 프린터의 모든 것(개정판)",안상준 ,,2018-07-15,9791162240793<br>
처음 배우는 암호화,장필리프 오마송 ,류광 ,2018-07-20,9791162240977<br>
굴리굴리 프렌즈와 함께하는 색칠하기,김현 ,,2017-06-15,9788968483349<br>
"IT CookBook, 모바일 UI/UX 디자인 실무",이영주 ,,2018-07-09,9791156644088<br>
굴리굴리 프렌즈와 함께하는 미로 찾기,김현 ,,2017-06-15,9788968488115<br>
톡톡 창의력 그림 찾기 플러스,창의수학연구소 ,,2017-05-05,9788968488108<br>
만들면서 배우는 워드프레스(개정판),박현우 ,,2018-07-25,9791162240946<br>
굴리굴리 프렌즈와 함께하는 그림 찾기,김현 ,,2017-07-15,9788968486005<br>
얼굴 만들기 스티커북 – 동물 왕국,i-Read 출판사 ,편집부 ,2017-10-05,9791162240014<br>
얼굴 만들기 스티커북 – 동물 농장,i-Read 출판사 ,편집부 ,2017-10-05,9791162240021<br>
아주 큰 스케치북 : 색칠하기,i-Read 출판사 ,편집부 ,2017-10-10,9791162240106
        </blockquote>
        <p>참고로 출력할 때 지원하는 파일 포맷은 다음과 같다.</p>
        <ul>
          <li>jsonlines</li>
          <li>json</li>
          <li>xml</li>
          <li>csv</li>
          <li>pickle</li>
          <li>jl</li>
          <li>marshal</li>
        </ul>
        <p></p>
        <div class="tip">
          <h4>TIP</h4><p>python3.7 버전의 경우 최종적으로 크롤링을 실행했을 때 일부 모듈의 manhole.py 파일의 구문 중 다음과 같은 에러가 나는 경우가 있다.</p>
          <pre class="python"><code><blockquote>&nbsp;&nbsp;File&nbsp;<font color="#483d8b">&quot;/Users/ComputerName/Virtualenvs/scrapy_env/lib/python3.7/site-packages/twisted/conch/manhole.py&quot;</font><font color="#66cc66">,</font>&nbsp;line&nbsp;<font color="#ff4500">154</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff7700">def</font>&nbsp;write<font>&#40;</font><font color="#008000">self</font><font color="#66cc66">,</font>&nbsp;data<font color="#66cc66">,</font>&nbsp;async<font color="#66cc66">=</font><font color="#008000">False</font><font>&#41;</font>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^<br/>
<font color="#008000">SyntaxError</font>:&nbsp;invalid&nbsp;syntax</blockquote></code></pre>
          <p>이는 파이썬의 버전 호환 문제로 manhole.py 파일의 'async'라는 변수명이 파이썬 3.7에서 예약어가 되었기 때문에 발생하는 에러이다. 파이썬의 버전을 3.6으로 다운그레이드 하거나, manhole.py 파일 내에 'async'라는 변수명을 모두 바꿔주면 해결된다. 예를 들면 'async'를 모두 'isAsync' 로 변경하여 주면 에러 없이 정상 작동한다.</p>
        </div>
      </article>
    </section>
  </div>
